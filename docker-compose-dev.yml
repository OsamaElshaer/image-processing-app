services:
    user-service:
        build:
            target: development
        env_file:
            - ./services/user-service/.env
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=postgres
            - DATABASE_NAME=user_service_dev
            - RABBITMQ_URL=amqp://rabbitmq:5672
        volumes:
            - ./services/user-service/src:/app/user-service/src:ro
        depends_on:
            postgres:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy

    notification-service:
        build:
            target: development
        env_file:
            - ./services/notification-service/.env
        environment:
            - RABBITMQ_URL=amqp://rabbitmq:5672
        volumes:
            - ./services/notification-service/src:/app/notification-service/src:ro
        depends_on:
            rabbitmq:
                condition: service_healthy

    upload-image-service:
        build:
            target: development
        env_file:
            - ./services/upload-image-service/.env
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=postgres
            - DATABASE_NAME=upload_image_dev
            - RABBITMQ_URL=amqp://rabbitmq:5672
        volumes:
            - ./services/upload-image-service/src:/app/upload-image-service/src:ro
        depends_on:
            - postgres
            - rabbitmq

    postgres:
        image: postgres
        container_name: postgres-container
        ports:
            - "5432:5432"
        restart: always
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: postgres
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U root"]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    pgdata:
