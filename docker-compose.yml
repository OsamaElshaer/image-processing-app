services:
    nginx:
        image: nginx:latest
        container_name: nginx-gateway
        ports:
            - "80:80"
        volumes:
            - processed_images:/var/www/processed
            - ./services/nginx-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - user-service
            - upload-image-service
            - notification-service
            - process-image-service
        networks:
            - app-network

    user-service:
        build:
            context: services/user-service
        container_name: user-service
        restart: always
        image: user-service
        volumes:
            - ./services/user-service/src:/app/user-service/src:ro
        depends_on:
            postgres:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        networks:
            - app-network

    notification-service:
        build:
            context: services/notification-service
        container_name: notification-service
        restart: always
        image: notification-service
        volumes:
            - ./services/notification-service/src:/app/notification-service/src:ro
        depends_on:
            postgres:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        networks:
            - app-network

    upload-image-service:
        build:
            context: ./services/upload-image-service
        container_name: upload-image-service
        image: upload-image-service
        restart: always
        volumes:
            - ./services/upload-image-service/src:/app/upload-image-service/src:ro
        depends_on:
            postgres:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
        networks:
            - app-network

    process-image-service:
        build:
            context: ./services/process-image-service
        container_name: process-image-services
        image: process-image-service
        restart: always
        volumes:
            - ./services/process-image-service/src:/app/process-image-service/src:ro
            - processed_images:/app/process-image-service/output
        depends_on:
            postgres:
                condition: service_healthy
            rabbitmq:
                condition: service_healthy
            upload-image-service:
                condition: service_started
        networks:
            - app-network

    rabbitmq:
        image: rabbitmq:management
        container_name: rabbitmq
        restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        healthcheck:
            test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
            interval: 30s
            timeout: 10s
            retries: 5
        networks:
            - app-network

    postgres:
        image: postgres
        container_name: postgres-container
        ports:
            - "5432:5432"
        restart: always
        environment:
            POSTGRES_USER: root
            POSTGRES_PASSWORD: postgres
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U root"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - app-network
    redis:
        image: redis
        container_name: redis
        ports:
            - "6379:6379"
        networks:
            - app-network

volumes:
    pgdata:
    rabbitmq_data:
    processed_images:
networks:
    app-network:
        driver: bridge
