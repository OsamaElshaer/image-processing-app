version: "3"
services:
    user-service:
        build:
            context: services/user-service
            target: development # Ensure you have a corresponding "development" target in your Dockerfile
        container_name: user-service
        image: user-service:latest
        volumes:
            - ./services/user-service/src:/app/user-service/src:ro # Consider removing ":ro" if you need write access
        env_file:
            - services/user-service/.env
        ports:
            - "3000:3000"
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - POSTGRES_USER=root # Ensure the environment variable matches the one defined in PostgreSQL
            - POSTGRES_PASSWORD=postgres
            - DATABASE_NAME=image-processing

        depends_on:
            - postgres
        # Optional: Use a script to wait for PostgreSQL to be ready before starting the app
        # command: ["./wait-for-it.sh", "postgres:5432", "--", "npm", "start"]

    postgres:
        image: postgres
        container_name: postgres-container
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        restart: always
        environment:
            POSTGRES_USER: root # Make sure this matches the DB_USER from the app
            POSTGRES_PASSWORD: postgres
            DATABASE_NAME: image-processing

volumes:
    pgdata:
